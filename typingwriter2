<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>타자기</title>
  <style>
    body {
      font-family: 'Courier New', monospace;
      background-color: #f4f4f4;
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 30px;
    }
    .info {
      margin-bottom: 20px;
      text-align: center;
    }
    .label {
      width: 80%;
      height: 150px;
      border: 2px solid #333;
      margin-bottom: 20px;
      background-color: #fff;
      font-size: 24px;
      padding: 10px;
      overflow-y: auto;
    }
    .keyboard {
      display: flex;
      flex-direction: column;
      gap: 5px;
    }
    .row {
      display: flex;
      justify-content: center;
    }
    .key {
      padding: 10px 15px;
      margin: 2px;
      border-radius: 5px;
      border: 1px solid #333;
      cursor: pointer;
      user-select: none;
      transition: background-color 0.2s;
    }
    .group1 { background-color: #FFD700; }
    .group2 { background-color: #90EE90; }
    .group3 { background-color: #87CEFA; }
    .group4 { background-color: #FFB6C1; }
    .key.active {
      background-color: #444 !important;
      color: white;
    }
  </style>
</head>
<body>
  <div class="info">
    <h1>타자기</h1>
    <p>한양여자대학교|빅데이터과|2402183|원주현</p>
  </div>

  <label class="label" id="paper"></label>

  <div class="keyboard" id="keyboard"></div>

  <script>
    const paper = document.getElementById('paper');
    const keyboard = document.getElementById('keyboard');

    let isKorean = false;

    const enToKoMap = {
      'q': 'ㅂ', 'w': 'ㅈ', 'e': 'ㄷ', 'r': 'ㄱ', 't': 'ㅅ', 'y': 'ㅛ', 'u': 'ㅕ', 'i': 'ㅑ', 'o': 'ㅐ', 'p': 'ㅔ',
      'a': 'ㅁ', 's': 'ㄴ', 'd': 'ㅇ', 'f': 'ㄹ', 'g': 'ㅎ', 'h': 'ㅗ', 'j': 'ㅓ', 'k': 'ㅏ', 'l': 'ㅣ',
      'z': 'ㅋ', 'x': 'ㅌ', 'c': 'ㅊ', 'v': 'ㅍ', 'b': 'ㅠ', 'n': 'ㅜ', 'm': 'ㅡ'
    };

    const enKeys = [
      { chars: '1234567890←', class: 'group1' },
      { chars: 'qwertyuiop', class: 'group2' },
      { chars: 'asdfghjkl', class: 'group3' },
      { chars: 'zxcvbnm.', class: 'group4' }
    ];

    const koKeys = [
      { chars: '1234567890←', class: 'group1' },
      { chars: 'ㅂㅈㄷㄱㅅㅛㅕㅑㅐㅔ', class: 'group2' },
      { chars: 'ㅁㄴㅇㄹㅎㅗㅓㅏㅣ', class: 'group3' },
      { chars: 'ㅋㅌㅊㅍㅠㅜㅡ.', class: 'group4' }
    ];

    function renderKeys() {
      keyboard.innerHTML = '';
      const layout = isKorean ? koKeys : enKeys;
      layout.forEach(row => {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'row';
        for (let ch of row.chars) {
          const key = document.createElement('div');
          key.className = `key ${row.class}`;
          key.textContent = ch;
          key.dataset.value = ch;
          rowDiv.appendChild(key);
        }
        keyboard.appendChild(rowDiv);
      });
    }

    renderKeys();

    document.addEventListener('keydown', (e) => {
      let char = e.key.toLowerCase();

      if (char === '.') {
        isKorean = !isKorean;
        renderKeys();
        return;
      }

      if (char === 'backspace') {
        e.preventDefault();
        deleteLastChar();
        highlightKey('←');
        return;
      }

      if (isKorean && enToKoMap[char]) {
        char = enToKoMap[char];
      }

      highlightKey(char);
      paper.innerText += char;
    });

    keyboard.addEventListener('click', (e) => {
      if (e.target.classList.contains('key')) {
        const char = e.target.dataset.value;

        if (char === '.') {
          isKorean = !isKorean;
          renderKeys();
          return;
        }

        if (char === '←') {
          deleteLastChar();
          return;
        }

        paper.innerText += char;

        e.target.classList.add('active');
        setTimeout(() => e.target.classList.remove('active'), 150);
      }
    });

    function highlightKey(char) {
      const keys = document.querySelectorAll('.key');
      keys.forEach(k => {
        if (k.dataset.value === char) {
          k.classList.add('active');
          setTimeout(() => k.classList.remove('active'), 150);
        }
      });
    }

    function deleteLastChar() {
      paper.innerText = paper.innerText.slice(0, -1);
    }
  </script>
</body>
</html>
